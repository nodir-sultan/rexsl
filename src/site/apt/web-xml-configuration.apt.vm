# ReXSL core module

There are two classes that you should use in your project (both
of them are always mandatory):
{{{./apidocs-${project.version}/com/rexsl/core/RestfulServlet.html}`RestfulServlet`}} and
{{{./apidocs-${project.version}/com/rexsl/core/XsltFilter.html}`XsltFilter`}}. Use them
in `WEB-INF/web.xml`:

```xml
<web-app>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>/xsl/*</url-pattern>
  </servlet-mapping>
  <filter>
    <filter-name>XsltFilter</filter-name>
    <filter-class>com.rexsl.core.XsltFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>XsltFilter</filter-name>
    <servlet-name>RestfulServlet</servlet-name>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>ERROR</dispatcher>
  </filter-mapping>
  <servlet>
    <servlet-name>RestfulServlet</servlet-name>
    <servlet-class>com.rexsl.core.RestfulServlet</servlet-class>
    <init-param>
      <param-name>com.rexsl.PACKAGES</param-name>
      <param-value>foo</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>RestfulServlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>
  <mime-mapping>
    <extension>xsl</extension>
    <mime-type>text/xsl</mime-type>
  </mime-mapping>
  [...]
</web-app>
```

{{{./apidocs-${project.version}/com/rexsl/core/RestfulServlet.html}`RestfulServlet`}} is
responsible for handling of JAX-RS requests and converting your JAXB annotated
classes into XML documents.

{{{./apidocs-${project.version}/com/rexsl/core/XsltFilter.html}`XsltFilter`}} is converting
XML output documents into XHTML when necessary.

This dependency you add to `pom.xml` (or download
{{{http://repo1.maven.org/maven2/com/rexsl/rexsl-core/${project.version}/rexsl-core-${project.version}.jar}`rexsl-core-${project.version}.jar`}}
and add it to classpath):

```xml
<project>
  <dependencies>
    <dependency>
      <groupId>com.rexsl</groupId>
      <artifactId>rexsl</artifactId>
      <version>${project.version}</version>
    </dependency>
    [...]
  </dependencies>
  [...]
</project>
```
